version: '2.1'
services:
  songservicedb:
    image: postgres:latest
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB:       "songservicedb"
#    volumes:
#      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
#      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "songservicedb"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  resourceservicedb:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "resourceservicedb"
    networks:
      backend:
        aliases:
          - "resourceservicedb"

  configserver:
    image: sparser/configserver:0.0.1-SNAPSHOT
    ports:
      - "8071:8071"
    #    environment:
    #      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      backend:
        aliases:
          - "configserver"

  eurekaserver:
    image: sparser/eureka-discovery-service:0.0.1-SNAPSHOT
    ports:
      - "8070:8070"
    depends_on:
      songservicedb:
        condition: service_started
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"

  gatewayserver:
    image: sparser/gateway-service:0.0.1-SNAPSHOT
    ports:
      - "8072:8072"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8072"
      CONFIGSERVER_URI: "http://configserver:8071"
      EUREKASERVER_URI: "http://eurekaserver:8070/eureka/"
      EUREKASERVER_PORT: "8070"
      CONFIGSERVER_PORT: "8071"
    depends_on:
      songservicedb:
        condition: service_started
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway"


  songservice:
    image: sparser/song-service:0.0.1-SNAPSHOT
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "5431"
    depends_on:
      songservicedb:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "8081:8081"
    #    environment:
#      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      - backend

  resourceservice:
    image: sparser/resource-service:0.0.1-SNAPSHOT
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "5432"
#      ENCRYPT_KEY: "IMSYMMETRIC"
    ports:
      - "8082:8082"
    depends_on:
      resourceservicedb:
        condition: service_started
      configserver:
        condition: service_started
    networks:
      - backend

networks:
  backend:
    driver: bridge