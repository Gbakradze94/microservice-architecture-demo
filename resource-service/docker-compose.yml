version: '2.1'
services:
  resourceservice:
#    container_name: resourceservice
    image: sparser/resource-service:0.0.1-SNAPSHOT
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
    links:
      - localstack
    depends_on:
      resourceservicedb:
        condition: service_healthy
#      configserver:
#        condition: service_started
      localstack:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      - backend
      - localstack-network
  resourceservicedb:
    image: postgres:latest
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "resourceservicedb"
    networks:
      backend:
        aliases:
          - "resourceservicedb"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  localstack:
    image: localstack/localstack:latest
    #    hostname: localstack
    ports:
      - "4566:4566"
      - "8090:8090"
    expose:
      - resourceservice
    environment:
      - SERVICES=s3
      #      - HOSTNAME_EXTERNAL=localstack
      - DEBUG=1
      - PORT_WEB_UI=8090
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_SECRET_ACCESS_KEY=kkkkkkkkkkkkkkkkkkkkkkkkk
      - AWS_ACCESS_KEY_ID=AAAAAAAAAAAAAAAAAA
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - ~/tmp/localstack:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - localstack-network

networks:
  backend:
    driver: bridge
  localstack-network:
    driver: bridge